<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>maven-docker-demo</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <!-- 配置打包名称 demo -->
        <finalName>demo</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- 只构建镜像,不启动容器,先把镜像发到服务器上,再推到docker hub 上 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- harbor(serverId:harbor)需要提供授权认证信息(在maven里配置server),上传docker hub(serverId:docker-hub)同harbor -->
                    <serverId>docker-hub</serverId>
                    <!-- 发布到服务器上:${project.artifactId}. 推送到私有仓库: 172.17.0.9:9001/library/${project.artifactId}
                         library是harbor默认仓库. 推送到docker hub上: john137724/${project.artifactId} -->
                    <imageName>172.17.0.9:9001/library/${project.artifactId}</imageName>
                    <!--指定标签 默认 latest 发布的时候可以调整为发布版本号, 如 1.0-->
                    <imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!-- 指定dockerHost,学习服务器,莫要攻击我,如果你也想需要相关技术可以用,但是请不要乱搞,谢谢 -->
                    <dockerHost>http://1.15.74.240:1802</dockerHost>
                    <!-- 指定 Dockerfile 路径-->
                    <dockerDirectory>${project.basedir}</dockerDirectory>

                    <!-- 以下是为了docker push到DockerHub使用的 -->
                    <!-- <registryUrl>https://index.docker.io/v1/</registryUrl> -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>